@using BlogProject.Services

@inject IImageService imageService 
@model IEnumerable<BlogProject.Models.Blog>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageData)
            </th>            
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var blog in Model) {
        <tr>
            <td>
                @* DisplayFor displays the value of content *@
                @Html.DisplayFor(modelItem => blog.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => blog.Updated)
            </td>
            <td>
                @*Decode image data byte array using image service, creates base64 string that can be viewed*@
                <img class="img-fluid" width="200px" src="@imageService.DecodeImage(blog.ImageData, blog.ContentType)"/>                
            </td>            
            <td>
                @* asp-route-id selects specific record/id value to be retrieved *@
                <a asp-action="Edit" asp-route-id="@blog.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@blog.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@blog.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
