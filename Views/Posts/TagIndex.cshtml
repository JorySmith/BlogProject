@using BlogProject.Models
@using BlogProject.Services
@using BlogProject.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<BlogUser> userManager
@inject IImageService imageService
@model IPagedList<Post>

@{
    ViewData["Title"] = "Tags";
}
<h3>#@ViewData["SearchTag"].ToString().ToLower() Posts:</h3>

@*If results, display them, otherwise, display "No results" paragraph*@

@if (Model.Count == 0) {
    <h5>No results... Please try a different search.</h5>
} else {
    <div class="row">
        @foreach (var post in Model)
        {
            //Is the logged in user the Author of this post??
            var isAuthor = false;
            if (User.Identity.IsAuthenticated)
            {
                isAuthor = isAuthor && (post.BlogUserId == userManager.GetUserId(User));
            }

            <div class="col-sm-12 col-md-6 col-lg-4 mt-2">
                <div class="card border-dark h-100">
                    <div class="card-body d-flex flex-column justify-content-between text-center">
                        @*Title*@
                        <div class="title d-flex justify-content-center align-items-center">                                               
                            <h5 class="card-title">@post.Title</h5>              
                        </div>
                        @*Abstract*@
                        <div>
                            <p class="card-text">@post.Abstract</p>
                        </div>

                        <br />
                        @*Read more*@
                        <div class="text-center">
                            <a class="btn btn-dark btnWide mb-2" 
                                asp-action="Details" 
                                asp-controller="Posts" 
                                asp-route-slug="@post.Slug">Read More</a>
                        </div>
                        @*Edit post*@
                        @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                        {
                            <div class="text-center">
                                <a class="btn btn-success btnWide mb-2" 
                                    asp-action="Edit" 
                                    asp-controller="Posts" 
                                    asp-route-id="@post.Id">Edit Post</a>
                            </div>
                        }
                        @*Blog image*@
                        <img class="card-img-bottom mt-1" 
                             src="@imageService.DecodeImage(post.ImageData, post.ContentType)" 
                             alt="Post image" />
                    </div>                
                </div>
            </div>
        }
    </div>

    <hr />

    <div class="row">
        <div class="col h3">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>
    <div class="row">
        <div class="col">
            @*Persist searchTag from ViewData["SearchTag"] and forward it to Url.Action*@
            @Html.PagedListPager(Model, page => Url.Action("TagIndex", new { page = page, searchTag = ViewData["SearchTag"] }),
            new PagedListRenderOptions
            {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
            })
        </div>
    </div>
}